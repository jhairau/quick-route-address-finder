name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  test:
    name: Test before release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:coverage

      - name: Run linting
        run: npm run lint

      - name: Build package
        run: npm run build

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: test
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

          # Generate changelog (basic version)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "## What's Changed" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT

          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            git log --pretty=format:"* %s (%h)" $LAST_TAG..HEAD >> $GITHUB_OUTPUT
          else
            git log --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
          fi
          echo "" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.changelog.outputs.VERSION }}
          body: |
            # Release ${{ steps.changelog.outputs.VERSION }}

            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Installation

            ```bash
            npm install quick-route-address-finder@${{ steps.changelog.outputs.VERSION }}
            ```

            ## NPM Package

            📦 [View on NPM](https://www.npmjs.com/package/quick-route-address-finder/v/${{ steps.changelog.outputs.VERSION }})

            ---

            **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.LAST_TAG }}...${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

      - name: Upload built package as release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/main.js
          asset_name: quick-route-address-finder-${{ steps.changelog.outputs.VERSION }}.js
          asset_content_type: application/javascript

  publish-npm:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [test, release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js with NPM registry
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Verify package contents
        run: |
          echo "📦 Package contents:"
          npm pack --dry-run

      - name: Publish to NPM (latest)
        if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta') && !contains(github.ref, 'rc')"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM (prerelease)
        if: "contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc')"
        run: |
          if [[ "${{ github.ref }}" == *"alpha"* ]]; then
            npm publish --tag alpha
          elif [[ "${{ github.ref }}" == *"beta"* ]]; then
            npm publish --tag beta  
          elif [[ "${{ github.ref }}" == *"rc"* ]]; then
            npm publish --tag next
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: Notify on completion
    runs-on: ubuntu-latest
    needs: [release, publish-npm]
    if: always()

    steps:
      - name: Release summary
        run: |
          echo "## 🚀 Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ needs.publish-npm.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [[ "${{ needs.publish-npm.result }}" == "success" ]]; then
            echo "✅ Successfully published to NPM" >> $GITHUB_STEP_SUMMARY
            echo "📦 [View on NPM](https://www.npmjs.com/package/quick-route-address-finder)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ NPM publish failed" >> $GITHUB_STEP_SUMMARY
          fi

          echo "🎉 [View GitHub Release](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }})" >> $GITHUB_STEP_SUMMARY
